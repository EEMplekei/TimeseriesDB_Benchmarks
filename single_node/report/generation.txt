DATA GENERATION

In the data generation process, we employed the tsbs_generate_data script provided by TSBS. Our initial decision aimed at creating three distinct datasets, intending to assess how the two databases would handle variations in dataset sizes. These datasets consist of a small dataset sized at 1GB, a medium dataset sized at 5GB, and a large dataset measuring 15GB.

Concerning the specification of dataset sizes, we determined the appropriate timestamps for the start and end of our data within the tsbs_generate_data tool. This meticulous selection allowed us to generate the three distinct datasets (small - 1GB, medium - 5GB, large - 15GB).

For the selected research use case, we focused on the Internet of Things (IoT). Rigorous consistency was maintained in the application of non-random results across all data and generated queries. This meticulous approach ensures the repeatability of IoT data generation, facilitating adjustments in both the database size and dataset dimensions.

For those seeking additional technical insights into the data generation process, comprehensive details are available in our script located within our repository at [REPO/single_node/data_generate/data_generate.sh].





QUERY GENERATION

For the query generation process, we elected to employ all query types provided by TSBS within the context of the IoT use case. Subsequently, a decision was made to assess, for each dataset, the execution of a singular query. In this configuration, we systematically clear the cache after each query execution. Additionally, we conducted evaluations involving the execution of ten consecutive queries of the same type. This deliberate approach aimed to scrutinize the indexing and caching performance of the respective databases.

To facilitate these procedures, we adapted and employed the bash script generate_queries.sh to generate queries for the three databases established for both Influx and TimescaleDB. The script, now renamed as generate_all_queries.sh, resides in the repository at [REPO/queries_generate_all_queries]. Its primary function is to parameterize and execute the Go binary tsbs_generate_queries.